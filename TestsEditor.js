"use strict";function filledArray(t,s){return Array.from({length:t},((t,e)=>s))}class TestsEditor extends preact.Component{constructor(t){super(t),this.state={inputs:t.inputs,outputs:t.outputs,tests:t.tests,onUnmount:t.onUnmount}}componentWillUnmount(){this.state.onUnmount(this.state.tests)}render(){const t=this.state.inputs,s=this.state.outputs,e=this.state.tests;return 0==t.length||0==s.length?h("div",{className:"testsEditor"},h("div",{className:"noInputsOutputsMessage"},"There should be inputs and outputs to add tests")):h("div",{className:"testsEditor"},h("div",{className:"tables"},h("div",{className:"testsTableWrapper inputs"},h("table",{className:"testsTable inputs"},h("tbody",null,h("tr",null,h("td",null),t.map(((t,s)=>h("td",{key:s},t)))),e.map(((s,n)=>h("tr",{key:n},h("td",null,h("div",{className:"removeRowButton animated unselectable",onClick:t=>{const s=this.state.tests.length;this.setState((t=>(t.tests.length!=s||t.tests.splice(n,1),t)))}},"-")),s.slice(0,t.length).map(((t,s)=>h("td",{key:s,className:"checkbox "+(e[n][s]?"checked":"unchecked"),onClick:t=>{this.setState((t=>(t.tests[n][s]=t.tests[n][s]?0:1,t)))}}))))))))),h("div",{className:"testsTableWrapper outputs"},h("table",{className:"testsTable outputs"},h("tbody",null,h("tr",null,s.map(((t,s)=>h("td",{key:s},t)))),e.map(((s,n)=>h("tr",{key:n},s.slice(t.length,s.length).map(((s,a)=>h("td",{key:a,className:"checkbox "+(e[n][t.length+a]?"checked":"unchecked"),onClick:s=>{this.setState((s=>(s.tests[n][t.length+a]=s.tests[n][t.length+a]?0:1,s)))}})))))))))),h("div",{className:"addRowButton animated unselectable",onClick:t=>{const s=this.state.tests.length;this.setState((t=>{if(t.tests.length!=s)return t;const e=t.inputs.length+t.outputs.length;return t.tests.push(filledArray(e,0)),t}))}},"+"))}}